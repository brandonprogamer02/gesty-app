{"version":3,"sources":["components/Cuatrimestre/CuatrimestreStyled.ts","ApiMaterias.ts","redux/actions/cuatrimestre.action.ts","redux/actions/materiaSeleccionado.action.ts","components/Cuatrimestre/Materia.tsx","components/Cuatrimestre/Cuatrimestre.tsx","utils.ts","components/MainComponent/MainComponentStyled.ts","LocalStorage.ts","components/MainComponent/MainComponent.tsx","App.tsx","redux/reducers/cuatrimestre.reducer.ts","redux/reducers/materiasRenderizado.reducer.ts","redux/middleware.ts","redux/store.ts","index.tsx"],"names":["DivParentContainer","styled","div","attrs","className","SelectMateria","select","InputCalificacion","input","type","Button","button","bgColor","BotonCerrarMateria","BotonCerrarCuatrimestre","DivTituloContainer","TrMateriaPadre","tr","TableMaterias","table","DivTable","LabelPromedioCuatrimestral","label","apiMateria","materia","creditos","ADD_CUATRIMESTRE","DELETE_CUATRIMESTRE","REPLACE_CUATRIMESTRES","ADD_MATERIA","DELETE_MATERIA","UPDATE_MATERIA","updateMateria","indiceCuatrimestre","indiceMateria","payload","NUEVA_MATERIA_SELECCIONADO","BORRAR_MATERIA_SELECCIONADO","UPDATE_MATERIA_SELECCIONADO","REPLACE_MATERIA_SELECCIONADO","borrarMateriaSeleccionado","Materia","props","dataMateria","indice","materiaRenderizado","useSelector","state","dispatch","useDispatch","useState","selectMateria","setSelectMateria","setCreditos","calificacion","setCalificacion","useEffect","nombre","handlerSelect","value","materiaPrev","ApiMaterias","forEach","element","dataReal","filter","el","id","onChange","event","currentTarget","map","index","style","position","placeholder","e","Number","console","log","handlerInputCalificacion","onClick","deleteMateria","Cuatrimestre","cuatrimestre","cuatrimestres","promedioCuatrimestral","setPromedioCuatrimestral","calcularPromedio","notaParcial","cantidadCreditos","elemento","notaVuelta","toFixed","nuevaMateria","Math","random","toString","substr","GlobalStyles","createGlobalStyle","DivMainContainer","DivCuatrimestres","ButtonNuevoCuatrimestre","LabelPromedioHistorico","Titulo","getLocalStorage","res","localStorage","getItem","setItem","JSON","stringify","parse","MainComponent","promedioHistorico","setPromedioHistorico","getPromedioHistorico","cuatrimestresData","replaceCuatrimestres","materias","App","path","exact","render","inicialState","action","newState1","newState2","newState3","newState4","newState5","_materia","_indiceMateria","newState6","initialState","push","middleware","store","next","setTimeout","nuevoStorage","getState","reducers","combineReducers","CuatrimestreReducer","materiaReducerReducer","createStore","composeWithDevTools","applyMiddleware","realMiddlerware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.49974795.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const DivParentContainer = styled.div.attrs({ className: 'border' })`\r\n   display:flex;\r\n   flex-flow: row wrap;\r\n   padding: 10px;\r\n   height: 320px;\r\n   align-content: space-between;\r\n   > *{\r\n      margin: 5px 0px;\r\n   }\r\n\r\n   @media (min-width: 0px) {\r\n      margin: 30px 0px;\r\n      > *{\r\n         width: 100%;\r\n      font-size:12px;\r\n   }\r\n     \r\n   };\r\n   @media (min-width: 1058px) { \r\n      * {\r\n         font-size: 14px;\r\n      }\r\n      margin: 30px 20px;\r\n      width: 400px;\r\n   };\r\n   \r\n`\r\n\r\nexport const SelectMateria = styled.select.attrs({ className: '' })`\r\n   outline:none;\r\n   padding: 10px 0px;\r\n   width: 190px;\r\n`\r\n\r\nexport const InputCalificacion = styled.input.attrs({ type: 'number', className: 'form-control' })`\r\n   display:inline-block;\r\n   width: 60px;\r\n   padding: 6px;\r\n`\r\nexport const Button = styled.button`\r\n   outline: none;\r\n   background-color: ${({ bgColor }: { bgColor?: string }) => bgColor || '#569C11'};\r\n   color: white;\r\n   border: 0px;\r\n   padding: 5px 20px;\r\n   box-shadow: 0px 0px 4px 0.5px grey;\r\n   \r\n\r\n`\r\n\r\nexport const BotonCerrarMateria = styled(Button).attrs({\r\n   className: 'cerrar badge    '\r\n})`\r\n   background-color: red;\r\n   text-align: center;\r\n   position: absolute;\r\n   top: calc(50% - 10px);\r\n   right: 0px;\r\n   padding: 5px;\r\n   font-size: medium;\r\n   display:none;\r\n   \r\n`\r\nexport const BotonCerrarCuatrimestre = styled(Button)`\r\n   background-color: red;\r\n   margin-left: 10px;\r\n`\r\n\r\nexport const DivTituloContainer = styled.div`\r\n   display:flex;\r\n   justify-content: space-between;\r\n   width: 100%;\r\n   \r\n   \r\n   > label{\r\n      font-weight: bold;\r\n      font-size:larger;\r\n   }\r\n   \r\n\r\n`\r\nexport const TrMateriaPadre = styled.tr.attrs({ className: '' })`\r\n   :hover{\r\n      .cerrar{\r\n      display: inline-block;\r\n      }\r\n    }\r\n`\r\n\r\nexport const TableMaterias = styled.table`\r\n   padding: 10px;\r\n   display:block;\r\n   box-sizing: border-box;\r\n\r\n   td{\r\n      padding: 0px 3px;\r\n   }\r\n   \r\n   *{\r\n      margin: 2px 0px;\r\n   }\r\n`\r\nexport const DivTable = styled.div`\r\n   margin-top: 10px;\r\n   border-top: 2px solid #B5B5B5;\r\n   border-bottom: 2px solid #B5B5B5;\r\n   overflow-y: scroll;\r\n   height: 190px;\r\n`\r\nexport const LabelPromedioCuatrimestral = styled.label`\r\n   background-color: #F09C0B;\r\n   color: white ;\r\n   padding: 7px;\r\n   border-radius: 5px;\r\n   width: 93%;\r\n   text-align: center;\r\n   font-weight: 400;\r\n   box-shadow: 0px 0px 4px 0.5px grey;\r\n`\r\n\r\n","export type typeApiMateria = { materia: string, creditos: number }\r\n\r\nconst apiMateria: typeApiMateria[] = [\r\n   { materia: 'Selecciona Tu Materia', creditos: 0 },\r\n   { materia: 'Fundamentos del Computador', creditos: 4 },\r\n   { materia: 'Introduccion a la elaboracion de Algoritmos', creditos: 4 },\r\n   { materia: 'Historia Universal', creditos: 3 },\r\n   { materia: 'Precalculo', creditos: 5 },\r\n   { materia: 'Redaccion Castellana', creditos: 4 },\r\n   { materia: 'Orientacion Institucional', creditos: 1 },\r\n   { materia: 'Etica 1', creditos: 3 },\r\n   { materia: 'Historia Dominicana', creditos: 3 },\r\n   { materia: 'Calculo Diferencial', creditos: 5 },\r\n   { materia: 'Calculo Integral', creditos: 5 },\r\n   { materia: 'Fundamentos de Programacion', creditos: 4 },\r\n   { materia: 'Etica 2', creditos: 3 },\r\n   { materia: 'Introduccion a la Base de Datos', creditos: 4 },\r\n   { materia: 'Contabilidad Financiera', creditos: 4 },\r\n   { materia: 'Probabilidad y Estadistica', creditos: 3 },\r\n   { materia: 'Programacion 1', creditos: 4 },\r\n   { materia: 'Analisis y Diseno de Sistemas', creditos: 4 },\r\n   { materia: 'Fisica General', creditos: 4 },\r\n   { materia: 'Laboratorio Fisica General', creditos: 1 },\r\n   { materia: 'Etica 3', creditos: 3 },\r\n   { materia: 'Diseno Centrado en el Usuario', creditos: 4 },\r\n   { materia: 'Metodologia de la investigacion', creditos: 3 },\r\n   { materia: 'Base de Datos avanzada', creditos: 4 },\r\n   { materia: 'Programacion 2', creditos: 4 },\r\n   { materia: 'Inteligencia Artificial', creditos: 4 },\r\n   { materia: 'Auditoria Informatica ', creditos: 4 },\r\n   { materia: 'Programacion 3', creditos: 4 },\r\n   { materia: 'Mineria de Datos e Inteligencia de Negocios', creditos: 4 },\r\n   { materia: 'Fundamentos de Electronica', creditos: 4 },\r\n   { materia: 'Laboratorio Fundamentos de Electronica', creditos: 1 },\r\n   { materia: 'Programacion Web', creditos: 4 },\r\n   { materia: 'Electiva 1', creditos: 3 },\r\n   { materia: 'Programacion Paralela', creditos: 4 },\r\n   { materia: 'Introduccion a la Ingenieria de Software', creditos: 4 },\r\n   { materia: 'Electiva 2', creditos: 3 },\r\n   { materia: 'Desarrollo de Emprendedores', creditos: 3 },\r\n   { materia: 'Ingles Tecnico', creditos: 4 },\r\n   { materia: 'Estructura de Datos', creditos: 4 },\r\n   { materia: 'Administracion de Proyectos de Software', creditos: 4 },\r\n   { materia: 'Introduccion al Desarrollo de Aplicaciones Moviles', creditos: 4 },\r\n   { materia: 'Plan de Negocios', creditos: 3 },\r\n   { materia: 'Proyecto Final TDS', creditos: 3 },\r\n]\r\nexport default apiMateria","import { typeApiMateria } from '../../ApiMaterias';\r\nimport { typeDataCuatrimestre, typeDataCuatrimestres, typeMateria } from '../../LocalStorage';\r\nimport { generateId } from '../../utils';\r\nimport { RealAction } from '../types';\r\n\r\n// CONSTANTS\r\nexport const ADD_CUATRIMESTRE = 'ADD_CUATRIMESTRE';\r\nexport const DELETE_CUATRIMESTRE = 'DELETE_CUATRIMESTRE';\r\nexport const REPLACE_CUATRIMESTRES = 'REPLACE_CUATRIMESTRES';\r\nexport const ADD_MATERIA = 'ADD_MATERIA';\r\nexport const DELETE_MATERIA = 'DELETE_MATERIA';\r\nexport const UPDATE_MATERIA = 'UPDATE_MATERIA';\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// const defaultActionCuatrimestre: RealAction = {\r\n//     type: '',\r\n//     payload: {\r\n//         cuatrimestre: [], cuatrimestres: [], indiceCuatrimestre: 0\r\n//     }\r\n// }\r\n\r\n// const defaultActionMateria: RealAction = {\r\n//     type: '',\r\n//     payload: {\r\n//         indiceCuatrimestre: 0, indiceMateria: 0,\r\n//         materia: { creditos: 0, nombre: '', calificacion: 0, id: generateId(), indice: 0 }\r\n//     }\r\n// }\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nexport const addCuatrimestre = (cuatrimestre: typeDataCuatrimestre): RealAction => ({\r\n    type: ADD_CUATRIMESTRE,\r\n    payload: {\r\n        cuatrimestre,\r\n        indiceCuatrimestre: 0,\r\n        cuatrimestres: []\r\n\r\n    }\r\n})\r\n\r\nexport const deleteCuatrimestre = (indiceCuatrimestre: number): RealAction => ({\r\n    type: DELETE_CUATRIMESTRE,\r\n    payload: {\r\n        cuatrimestre: [],\r\n        indiceCuatrimestre,\r\n        cuatrimestres: []\r\n    }\r\n})\r\n\r\nexport const replaceCuatrimestres = (cuatrimestres: typeDataCuatrimestres): RealAction => ({\r\n    type: REPLACE_CUATRIMESTRES,\r\n    payload: {\r\n        cuatrimestre: [],\r\n        indiceCuatrimestre: 0,\r\n        cuatrimestres\r\n    }\r\n})\r\n\r\nexport const addMateria = (indiceCuatrimestre: number, materia: typeMateria): RealAction => ({\r\n    type: ADD_MATERIA,\r\n    payload: {\r\n        indiceCuatrimestre,\r\n        materia,\r\n        indiceMateria: 0\r\n\r\n    }\r\n})\r\n\r\nexport const deleteMateria = (indiceCuatrimestre: number, indiceMateria: number, materia: typeMateria): RealAction => ({\r\n    type: DELETE_MATERIA,\r\n    payload: {\r\n        indiceCuatrimestre,\r\n        materia,\r\n        indiceMateria\r\n    }\r\n})\r\n\r\nexport const updateMateria = (indiceCuatrimestre: number, indiceMateria: number, materia: typeMateria): RealAction => {\r\n    return ({\r\n        type: UPDATE_MATERIA,\r\n        payload: {\r\n            indiceCuatrimestre,\r\n            materia,\r\n            indiceMateria\r\n        }\r\n    })\r\n}","import { materiaRenderizadoAction } from '../types';\r\nimport { typeApiMateria } from '../../ApiMaterias';\r\n\r\n// CONSTANTS\r\nexport const NUEVA_MATERIA_SELECCIONADO = 'NUEVA_MATERIA_SELECCIONADO';\r\nexport const BORRAR_MATERIA_SELECCIONADO = 'BORRAR_MATERIA_SELECCIONADO';\r\nexport const UPDATE_MATERIA_SELECCIONADO = 'UPDATE_MATERIA_SELECCIONADO';\r\nexport const REPLACE_MATERIA_SELECCIONADO = 'REPLACE_MATERIA_SELECCIONADO';\r\n\r\n// ACTIONS CREATORS\r\n\r\nexport const nuevaMateriaSeleccionado = (materia: typeApiMateria): materiaRenderizadoAction => ({\r\n    type: NUEVA_MATERIA_SELECCIONADO,\r\n    payload: {\r\n        materia\r\n    }\r\n});\r\n\r\nexport const borrarMateriaSeleccionado = (materia: typeApiMateria): materiaRenderizadoAction => ({\r\n    type: BORRAR_MATERIA_SELECCIONADO,\r\n    payload: {\r\n        materia\r\n    }\r\n});\r\n\r\nexport const updateMateriaSeleccionado = (materiaPrev: typeApiMateria, materiaNext: typeApiMateria): materiaRenderizadoAction => {\r\n    return ({\r\n        type: UPDATE_MATERIA_SELECCIONADO,\r\n        payload: {\r\n            materia: materiaNext,\r\n            materiaPrev\r\n        }\r\n    })\r\n};\r\n\r\nexport const replaceMateriaSeleccionado = (materias: typeApiMateria[]): materiaRenderizadoAction => {\r\n    return ({\r\n        type: REPLACE_MATERIA_SELECCIONADO,\r\n        payload: {\r\n            materias\r\n        }\r\n    })\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { SelectMateria, InputCalificacion, TrMateriaPadre, BotonCerrarMateria } from './CuatrimestreStyled'\r\nimport ApiMaterias, { typeApiMateria } from '../../ApiMaterias';\r\nimport { IPropsMateria } from './types';\r\nimport { typeMateria } from '../../LocalStorage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteMateria, updateMateria } from '../../redux/actions/cuatrimestre.action';\r\nimport { State } from '../../redux/types';\r\nimport { nuevaMateriaSeleccionado, updateMateriaSeleccionado } from '../../redux/actions/materiaSeleccionado.action';\r\n\r\n\r\nconst Materia = (props: IPropsMateria) => {\r\n   const { dataMateria, indice, indiceCuatrimestre } = props\r\n   const materiaRenderizado = useSelector((state: State) => state.materiaRenderizado);\r\n   const dispatch = useDispatch();\r\n   const [selectMateria, setSelectMateria] = useState('');\r\n   const [creditos, setCreditos] = useState(0);\r\n   const [calificacion, setCalificacion] = useState(0);\r\n\r\n   useEffect(() => {\r\n      setSelectMateria(dataMateria.nombre);\r\n      setCreditos(dataMateria.creditos);\r\n      setCalificacion(dataMateria.calificacion);\r\n   }, [dataMateria]);\r\n\r\n\r\n   const handlerSelect = (value: string) => {\r\n      // actualizamos el select con el valor qu nos llega del event\r\n      dispatch(updateMateriaSeleccionado({ creditos: 0, materia: selectMateria }, { creditos: 0, materia: value }));\r\n      setSelectMateria(value);\r\n      // actualizamos el credito con el credito que es\r\n      ApiMaterias.forEach(element => element.materia === value && setCreditos(element.creditos));\r\n      // add the subject in the state corresponding\r\n      // getting the credits\r\n      const f = ApiMaterias.filter(el => el.materia === value);\r\n      const dataReal: typeMateria = { creditos: f[0].creditos, calificacion, nombre: value, id: dataMateria.id, indice };\r\n      dispatch(updateMateria(indiceCuatrimestre, indice, dataReal));\r\n\r\n   };\r\n\r\n   const handlerInputCalificacion = (value: string) => {\r\n      setCalificacion(Number(value));\r\n      console.log({\r\n         nombre: dataMateria.nombre\r\n\r\n      })\r\n      const f = ApiMaterias.filter(el => el.materia === dataMateria.nombre);\r\n      const dataReal: typeMateria = { creditos: f[0].creditos, calificacion: Number(value), nombre: dataMateria.nombre, id: dataMateria.id, indice };\r\n      dispatch(updateMateria(indiceCuatrimestre, indice, dataReal));\r\n   };\r\n\r\n   const handlerBorrarMateria = () => {\r\n      console.log('F' + selectMateria + 'F');\r\n      if (selectMateria !== 'Selecciona Tu Materia' && selectMateria !== '') {\r\n         const materia: typeMateria = { creditos, calificacion, nombre: selectMateria, id: dataMateria.id, indice };\r\n         dispatch(deleteMateria(indiceCuatrimestre, indice, materia));\r\n      }\r\n   }\r\n\r\n   return (\r\n      <TrMateriaPadre>\r\n         <td>\r\n            <SelectMateria onChange={event => handlerSelect(event.currentTarget.value)} value={selectMateria}\r\n            >\r\n               {selectMateria !== '' && <option> {selectMateria} </option>}\r\n\r\n               {materiaRenderizado.map((element: typeApiMateria, index: number) => {\r\n                  return <option key={index} > {element.materia} </option>\r\n               })}\r\n\r\n            </SelectMateria>\r\n         </td>\r\n         <td>{creditos}</td>\r\n         <td style={{ position: 'relative' }}>\r\n            <InputCalificacion placeholder='Nota' value={calificacion}\r\n               onChange={(e) => handlerInputCalificacion(e.currentTarget.value)}\r\n            />\r\n            <BotonCerrarMateria onClick={handlerBorrarMateria} >X</BotonCerrarMateria>\r\n         </td>\r\n      </TrMateriaPadre>\r\n\r\n   )\r\n}\r\n\r\nexport default Materia;","import React, { useEffect, useState } from 'react';\r\nimport { DivParentContainer, DivTable, Button, DivTituloContainer, TableMaterias, LabelPromedioCuatrimestral, BotonCerrarCuatrimestre } from './CuatrimestreStyled';\r\nimport Materia from './Materia';\r\nimport { IPropsCuatrimestre } from './types';\r\nimport { typeMateria } from '../../LocalStorage';\r\nimport { generateId } from '../../utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../redux/types';\r\nimport { addMateria, deleteCuatrimestre } from '../../redux/actions/cuatrimestre.action';\r\nimport { borrarMateriaSeleccionado, nuevaMateriaSeleccionado } from '../../redux/actions/materiaSeleccionado.action';\r\n\r\nconst Cuatrimestre = (props: IPropsCuatrimestre) => {\r\n\r\n   const dispatch = useDispatch();\r\n   const cuatrimestre = useSelector((state: State) => state.cuatrimestres[props.indice]);\r\n   const [promedioCuatrimestral, setPromedioCuatrimestral] = useState(0);\r\n\r\n   useEffect(() => {\r\n      calcularPromedio();\r\n   });\r\n\r\n   const _addMateria = () => {\r\n      const nuevaMateria: typeMateria = { calificacion: 0, creditos: 0, nombre: '', id: generateId(), indice: 0 };\r\n      dispatch(addMateria(props.indice, nuevaMateria));\r\n   };\r\n\r\n   const calcularPromedio = () => {\r\n      let notaParcial = 0;\r\n      let cantidadCreditos = 0;\r\n      cuatrimestre.forEach(elemento => {\r\n         const { calificacion, creditos } = elemento;\r\n         let notaVuelta = 0;\r\n         if (calificacion >= 90) notaVuelta += 4;\r\n         else if (calificacion >= 80) notaVuelta += 3;\r\n         else if (calificacion >= 70) notaVuelta += 2;\r\n         else notaVuelta += 1;\r\n         const res = creditos * notaVuelta;\r\n         notaParcial += res;\r\n         cantidadCreditos += creditos;\r\n      });\r\n\r\n      const resultado = notaParcial / cantidadCreditos;\r\n      setPromedioCuatrimestral(Number(resultado.toFixed(1)))\r\n   };\r\n\r\n   const handlerEliminarCuatrimestre = () => {\r\n      cuatrimestre.forEach(el => {\r\n         console.log(el.nombre);\r\n         if (el.nombre !== '') {\r\n            dispatch(borrarMateriaSeleccionado({ creditos: el.creditos, materia: el.nombre }));\r\n         }\r\n      });\r\n      dispatch(deleteCuatrimestre(props.indice));\r\n\r\n\r\n   };\r\n\r\n   return (\r\n      <DivParentContainer>\r\n         <DivTituloContainer>\r\n            <label>Cuatrimestre {props.indice + 1}</label>\r\n            <div>\r\n               <Button onClick={_addMateria} className='badge  text-wrap '\r\n               >Nueva Materia</Button>\r\n               <BotonCerrarCuatrimestre onClick={handlerEliminarCuatrimestre}>X</BotonCerrarCuatrimestre>\r\n            </div>\r\n         </DivTituloContainer>\r\n         <DivTable>\r\n            <TableMaterias>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Materia</th>\r\n                     <th>Creditos</th>\r\n                     <th>Calificacion</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {cuatrimestre.map((element, index) => (<Materia indice={index} key={index} indiceCuatrimestre={props.indice} dataMateria={cuatrimestre[index]} />))}\r\n               </tbody>\r\n            </TableMaterias>\r\n         </DivTable>\r\n         <LabelPromedioCuatrimestral>Tu Promedio En este cuatrimestre fue es de {promedioCuatrimestral}</LabelPromedioCuatrimestral>\r\n\r\n      </DivParentContainer>\r\n   )\r\n}\r\n\r\nexport default Cuatrimestre;","export const generateId = () => (Math.random().toString(16).substr(2))","import styled, { createGlobalStyle } from 'styled-components'\r\nimport { Button, LabelPromedioCuatrimestral } from '../Cuatrimestre/CuatrimestreStyled'\r\n\r\n\r\nexport const DivParentContainer = styled.div.attrs({ className: '' })`\r\n   height: 100vh;    \r\n   background-image: radial-gradient(circle at 48.47% 50.41%, #daa6ff 0, #b78aee 25%, #8f6cd8 50%, #6350c3 75%, #2e3ab1 100%);\r\n\r\n`\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n   body button {\r\n      :hover{\r\n         cursor:pointer;\r\n      }\r\n   }\r\n   body * {\r\n      // @import url('https://fonts.googleapis.com/css2?family=Bangers&display=swap');\r\n      // font-family: 'Bangers', cursive;\r\n   }\r\n`\r\nexport const DivMainContainer = styled.div`  \r\n   display:flex;\r\n   margin: auto;\r\n   justify-content: center;\r\n   flex-flow: row wrap;\r\n   background-color: white;\r\n   border-radius: 10px; \r\n   align-content: space-around;\r\n   width: 95%;\r\n   height: 90%;\r\n   box-shadow: 0px 0px 8px 0.5px black;\r\n\r\n`\r\n\r\nexport const DivCuatrimestres = styled.div`\r\n   display: flex;\r\n   border-top: 3px solid #CACACA;    \r\n   border-bottom: 3px solid #CACACA;    \r\n   flex-basis: 95%;\r\n   height: 70%;\r\n   \r\n   @media (min-width: 0px) { \r\n      overflow-y: auto; \r\n      flex-flow: row wrap;\r\n     \r\n   };\r\n   @media (min-width: 576px) { \r\n      flex-flow: row nowrap;\r\n   };\r\n   \r\n`\r\n\r\nexport const ButtonNuevoCuatrimestre = styled(Button)`\r\n   background-color: cornflowerblue;\r\n   align-self: center;\r\n   font-weight: 1000;\r\n   @media (min-width: 0px) {\r\n      font-size:small;\r\n      padding: 20px 20px;\r\n   };\r\n   @media (min-width: 576px) { \r\n      height: 20%;\r\n      width:150px;\r\n   };\r\n   \r\n`\r\n\r\n\r\n\r\nexport const LabelPromedioHistorico = styled.label`\r\n   font-weight: 600;\r\n   \r\n`\r\nexport const Titulo = styled(LabelPromedioCuatrimestral)`\r\n   background-color:purple;\r\n   width: 80%;\r\n   font-size: x-large;\r\n   font-weight: bold;\r\n   padding: 14px 0px;\r\n   @media (min-width: 0px) {\r\n      font-size:medium;\r\n     \r\n   };\r\n   @media (min-width: 576px) { \r\n      font-size:x-large;\r\n   };\r\n`\r\n","import { State } from \"./redux/types\";\r\n\r\nexport type typeMateria = { nombre: string, creditos: number, calificacion: number, id: string, indice: number }\r\nexport type typeDataCuatrimestres = Array<typeDataCuatrimestre>;\r\nexport type typeDataCuatrimestre = typeMateria[];\r\n\r\nexport const addLocalStorage = (data: typeDataCuatrimestre) => {\r\n   const dataPrev = getLocalStorage().cuatrimestres\r\n   const newData: typeDataCuatrimestres = [...dataPrev, data]\r\n   localStorage.setItem('data', JSON.stringify(newData))\r\n};\r\n\r\nexport const deleteLocalStorage = (index: number) => {\r\n   const dataPrev: typeDataCuatrimestres = getLocalStorage().cuatrimestres\r\n   const newData = dataPrev.filter((element, indice) => indice !== index)\r\n   localStorage.setItem('data', JSON.stringify(newData))\r\n};\r\n\r\nexport const updateLocalStorage = (index: number, data: typeDataCuatrimestre) => {\r\n   let dataPrev = getLocalStorage().cuatrimestres\r\n   dataPrev[index] = data\r\n   localStorage.setItem('data', JSON.stringify(dataPrev))\r\n};\r\n\r\nexport const getLocalStorage = (): State => {\r\n   const res = localStorage.getItem('data')\r\n   if (res === null) {\r\n      localStorage.setItem('data', JSON.stringify([]))\r\n      return { cuatrimestres: [], materiaRenderizado: [] }\r\n   } else {\r\n      return JSON.parse(res)\r\n   }\r\n};\r\n\r\nexport const replaceLocalStorage = (nuevoStorage: State) => {\r\n   getLocalStorage()\r\n   localStorage.setItem('data', JSON.stringify(nuevoStorage))\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cuatrimestre from '../Cuatrimestre/Cuatrimestre';\r\nimport { DivMainContainer, DivParentContainer, DivCuatrimestres, LabelPromedioHistorico, ButtonNuevoCuatrimestre, Titulo, GlobalStyles } from './MainComponentStyled';\r\nimport { typeDataCuatrimestre } from '../../LocalStorage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getLocalStorage } from '../../LocalStorage';\r\nimport { } from '../../redux/actions/materiaSeleccionado.action';\r\nimport { addCuatrimestre, replaceCuatrimestres } from '../../redux/actions/cuatrimestre.action';\r\nimport { replaceMateriaSeleccionado } from '../../redux/actions/materiaSeleccionado.action';\r\nimport { State } from '../../redux/types';\r\nimport apiMateria from '../../ApiMaterias';\r\n\r\nconst MainComponent = () => {\r\n   const dispatch = useDispatch();\r\n   const cuatrimestres = useSelector((state: State) => state.cuatrimestres);\r\n   const [promedioHistorico, setPromedioHistorico] = useState(0);\r\n\r\n   useEffect(() => setPromedioHistorico(getPromedioHistorico()));\r\n\r\n   useEffect(() => {\r\n      // aqui cargamos la data del local storage\r\n      const cuatrimestresData = getLocalStorage().cuatrimestres;\r\n      const materiaRenderizado = getLocalStorage().materiaRenderizado;\r\n\r\n      cuatrimestresData && dispatch(replaceCuatrimestres(cuatrimestresData));\r\n      materiaRenderizado && dispatch(replaceMateriaSeleccionado(materiaRenderizado));\r\n \r\n\r\n   }, []);\r\n\r\n   const getPromedioHistorico = () => {\r\n      let notaParcial = 0;\r\n      let cantidadCreditos = 0;\r\n      cuatrimestres.forEach(cuatrimestre => {\r\n         cuatrimestre.forEach(materia => {\r\n            let notaVuelta = 0;\r\n            if (materia.calificacion >= 90) notaVuelta += 4;\r\n            else if (materia.calificacion >= 80) notaVuelta += 3;\r\n            else if (materia.calificacion >= 70) notaVuelta += 2;\r\n            else notaVuelta += 1;\r\n            const res = materia.creditos * notaVuelta;\r\n            notaParcial += res;\r\n            cantidadCreditos += materia.creditos;\r\n         })\r\n      })\r\n      const resultado = notaParcial / cantidadCreditos;\r\n      return Number(resultado.toFixed(1));\r\n   };\r\n\r\n   const nuevoCuatrimestre = () => {\r\n      const newCuatrimestre: typeDataCuatrimestre = []\r\n      dispatch(addCuatrimestre(newCuatrimestre));\r\n   };\r\n\r\n   return (\r\n      <DivParentContainer>\r\n         <div className=\"container-fluid  vh-100 d-flex\">\r\n            <GlobalStyles />\r\n            <DivMainContainer>\r\n               <Titulo>Gesty App - Brandox</Titulo>\r\n               <DivCuatrimestres>\r\n                  {cuatrimestres.map((element, index) => (\r\n                     <Cuatrimestre key={index} indice={index} />\r\n                  ))}\r\n                  <ButtonNuevoCuatrimestre onClick={nuevoCuatrimestre} >\r\n                     + <br />Nuevo Cuatrimestre\r\n               </ButtonNuevoCuatrimestre>\r\n               </DivCuatrimestres>\r\n               <LabelPromedioHistorico> Tu Promedio Historico es de {promedioHistorico} </LabelPromedioHistorico>\r\n            </DivMainContainer>\r\n         </div>\r\n      </DivParentContainer>\r\n   )\r\n}\r\n\r\nexport default MainComponent;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport MainComponent from './components/MainComponent/MainComponent'\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter >\r\n      <Route path='/' exact render={() => <MainComponent />} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","import { CuatrimestreAction, CuatrimestreState, MateriaAction, RealAction } from '../types';\r\n\r\nimport {\r\n    ADD_CUATRIMESTRE, REPLACE_CUATRIMESTRES, DELETE_CUATRIMESTRE, ADD_MATERIA, UPDATE_MATERIA,\r\n    DELETE_MATERIA\r\n} from '../actions/cuatrimestre.action';\r\n\r\nexport const inicialState: CuatrimestreState = [[]];\r\n\r\nconst cuatrimestre = (state: CuatrimestreState = inicialState, action: RealAction) => {\r\n    switch (action.type) {\r\n        //----------------------------------------------------------------------------------------------------------\r\n        case ADD_CUATRIMESTRE:\r\n            const newState1: CuatrimestreState = [...state, (action as CuatrimestreAction).payload.cuatrimestre]; // cuatrimestre\r\n            return newState1;\r\n        //----------------------------------------------------------------------------------------------------------\r\n        case DELETE_CUATRIMESTRE:\r\n            const newState2: CuatrimestreState = state.filter((cuatrimestre, index) => index !== (action as CuatrimestreAction).payload.indiceCuatrimestre);\r\n            return newState2;\r\n        //----------------------------------------------------------------------------------------------------------\r\n        case REPLACE_CUATRIMESTRES:\r\n\r\n            const newState3: CuatrimestreState = state = (action as CuatrimestreAction).payload.cuatrimestres;\r\n            return newState3;\r\n        //----------------------------------------------------------------------------------------------------------\r\n        case ADD_MATERIA:\r\n            const newState4: CuatrimestreState = state.map((cuatrimestre, indiceCuatrimestre) => {\r\n                if (indiceCuatrimestre === action.payload.indiceCuatrimestre) {\r\n                    const cuatrimestreActualizado = [...cuatrimestre, (action as MateriaAction).payload.materia];\r\n                    return cuatrimestreActualizado;\r\n                }\r\n                return cuatrimestre;\r\n            })\r\n            return newState4;\r\n        //--------------------------------------------------------------------------------------------------\r\n        case UPDATE_MATERIA:\r\n\r\n            const newState5: CuatrimestreState = state.map((cuatrimestre, indiceCuatrimestre) => {\r\n\r\n                if (indiceCuatrimestre === action.payload.indiceCuatrimestre) {\r\n                    const cuatrimestreActualizado = cuatrimestre.map((_materia, _indiceMateria) => {\r\n\r\n                        const { payload: { indiceMateria, materia } } = action as MateriaAction;\r\n\r\n                        if (_indiceMateria === indiceMateria) { // indiceMateria\r\n                            const materiaModificada = materia;\r\n                            return materiaModificada;\r\n                        }\r\n                        return _materia;\r\n                    });\r\n                    return cuatrimestreActualizado;\r\n                }\r\n                return cuatrimestre;\r\n            });\r\n            return newState5;\r\n\r\n        //--------------------------------------------------------------------------------------------------\r\n        case DELETE_MATERIA:\r\n            const newState6: CuatrimestreState = state.map((cuatrimestre, indiceCuatrimestre) => {\r\n                \r\n                if (indiceCuatrimestre === (action as MateriaAction).payload.indiceCuatrimestre) {\r\n\r\n                    const cuatrimestreActualizado = cuatrimestre.filter((materia, indiceMateria) => indiceMateria !== (action as MateriaAction).payload.indiceMateria)\r\n                    return cuatrimestreActualizado\r\n                }\r\n                return cuatrimestre;\r\n            })\r\n            return newState6;\r\n        //--------------------------------------------------------------------------------------------------\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default cuatrimestre\r\n","import { materiaRenderizadoState, materiaRenderizadoAction } from '../types';\r\nimport { NUEVA_MATERIA_SELECCIONADO, BORRAR_MATERIA_SELECCIONADO, UPDATE_MATERIA_SELECCIONADO, REPLACE_MATERIA_SELECCIONADO } from '../actions/materiaSeleccionado.action'\r\nimport apiMateria, { typeApiMateria } from '../../ApiMaterias'\r\n\r\nconst initialState: materiaRenderizadoState = apiMateria;\r\n\r\nconst materiaRenderizado = (state: materiaRenderizadoState = initialState, action: materiaRenderizadoAction) => {\r\n\r\n    switch (action.type) {\r\n        case NUEVA_MATERIA_SELECCIONADO:\r\n            const newState1: materiaRenderizadoState = state.filter(el => el.materia !== (action.payload.materia as typeApiMateria).materia);\r\n            return newState1;\r\n        case BORRAR_MATERIA_SELECCIONADO:\r\n            const newState2: materiaRenderizadoState = [...state, action.payload.materia as typeApiMateria];\r\n            return newState2;\r\n        case UPDATE_MATERIA_SELECCIONADO:\r\n\r\n            const newState3: materiaRenderizadoState = state.filter(el => el.materia !== (action.payload.materia as typeApiMateria).materia);\r\n            (action.payload.materiaPrev?.materia as string) !== '' && newState3.push(action.payload.materiaPrev as typeApiMateria);\r\n\r\n            return newState3;\r\n        case REPLACE_MATERIA_SELECCIONADO:\r\n            return action.payload.materias;\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default materiaRenderizado","import { CuatrimestreDispatch, MateriaAction, RealAction, State } from '../redux/types';\r\nimport { Store } from 'redux';\r\nimport { replaceLocalStorage } from '../LocalStorage';\r\nimport { DELETE_MATERIA, } from './actions/cuatrimestre.action';\r\nimport { borrarMateriaSeleccionado } from './actions/materiaSeleccionado.action';\r\n\r\ntype Middlerware = (store: any) => (next: CuatrimestreDispatch) => (action: RealAction) => void\r\n\r\nconst middleware: Middlerware = (store: Store) => next => action => {\r\n    if (action.type === DELETE_MATERIA) {\r\n        // const { creditos, nombre } = (action.payload as MateriaAction).materia;\r\n\r\n        const { payload: { materia: { creditos, nombre } } } = action as MateriaAction;\r\n        store.dispatch(borrarMateriaSeleccionado({ creditos, materia: nombre }));\r\n    }\r\n    // next it\r\n    next(action);\r\n\r\n    setTimeout(() => {\r\n        const state: State = store.getState();\r\n        replaceLocalStorage(state);\r\n    }, 500);\r\n\r\n}\r\n\r\nexport default middleware","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport CuatrimestreReducer from './reducers/cuatrimestre.reducer';\r\nimport materiaReducerReducer from './reducers/materiasRenderizado.reducer';\r\nimport realMiddlerware from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst reducers = combineReducers({\r\n    cuatrimestres: CuatrimestreReducer,\r\n    materiaRenderizado: materiaReducerReducer\r\n});\r\n\r\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(realMiddlerware)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}