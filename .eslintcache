[{"C:\\github\\react-projects\\gesty-app\\src\\index.tsx":"1","C:\\github\\react-projects\\gesty-app\\src\\App.tsx":"2","C:\\github\\react-projects\\gesty-app\\src\\redux\\reducers\\cuatrimestre.reducer.ts":"3","C:\\github\\react-projects\\gesty-app\\src\\redux\\reducers\\materiasRenderizado.reducer.ts":"4","C:\\github\\react-projects\\gesty-app\\src\\components\\MainComponent\\MainComponent.tsx":"5","C:\\github\\react-projects\\gesty-app\\src\\LocalStorage.ts":"6","C:\\github\\react-projects\\gesty-app\\src\\redux\\actions\\cuatrimestre.action.ts":"7","C:\\github\\react-projects\\gesty-app\\src\\redux\\actions\\materiaSeleccionado.action.ts":"8","C:\\github\\react-projects\\gesty-app\\src\\components\\MainComponent\\MainComponentStyled.ts":"9","C:\\github\\react-projects\\gesty-app\\src\\components\\Cuatrimestre\\Cuatrimestre.tsx":"10","C:\\github\\react-projects\\gesty-app\\src\\components\\Cuatrimestre\\CuatrimestreStyled.ts":"11","C:\\github\\react-projects\\gesty-app\\src\\utils.ts":"12","C:\\github\\react-projects\\gesty-app\\src\\components\\Cuatrimestre\\Materia.tsx":"13","C:\\github\\react-projects\\gesty-app\\src\\ApiMaterias.ts":"14","C:\\github\\react-projects\\gesty-app\\src\\redux\\store.ts":"15","C:\\github\\react-projects\\gesty-app\\src\\redux\\middleware.ts":"16"},{"size":290,"mtime":1616994578542,"results":"17","hashOfConfig":"18"},{"size":335,"mtime":1616984716816,"results":"19","hashOfConfig":"18"},{"size":3842,"mtime":1617059546500,"results":"20","hashOfConfig":"18"},{"size":1446,"mtime":1616988794980,"results":"21","hashOfConfig":"18"},{"size":3200,"mtime":1617146062440,"results":"22","hashOfConfig":"18"},{"size":1457,"mtime":1616968797538,"results":"23","hashOfConfig":"18"},{"size":2729,"mtime":1617058310166,"results":"24","hashOfConfig":"18"},{"size":1342,"mtime":1616987494780,"results":"25","hashOfConfig":"18"},{"size":2052,"mtime":1617060569282,"results":"26","hashOfConfig":"18"},{"size":3423,"mtime":1617071419035,"results":"27","hashOfConfig":"18"},{"size":2483,"mtime":1617069519731,"results":"28","hashOfConfig":"18"},{"size":70,"mtime":1613148593969,"results":"29","hashOfConfig":"18"},{"size":3741,"mtime":1617061070334,"results":"30","hashOfConfig":"18"},{"size":2570,"mtime":1617071935248,"results":"31","hashOfConfig":"18"},{"size":557,"mtime":1616966262709,"results":"32","hashOfConfig":"18"},{"size":999,"mtime":1617059546572,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"lly41d",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\github\\react-projects\\gesty-app\\src\\index.tsx",[],["73","74"],"C:\\github\\react-projects\\gesty-app\\src\\App.tsx",[],"C:\\github\\react-projects\\gesty-app\\src\\redux\\reducers\\cuatrimestre.reducer.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\redux\\reducers\\materiasRenderizado.reducer.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\components\\MainComponent\\MainComponent.tsx",["75","76","77"],"import React, { useState, useEffect } from 'react';\r\nimport Cuatrimestre from '../Cuatrimestre/Cuatrimestre';\r\nimport { DivMainContainer, DivParentContainer, DivCuatrimestres, LabelPromedioHistorico, ButtonNuevoCuatrimestre, Titulo, GlobalStyles } from './MainComponentStyled';\r\nimport { typeDataCuatrimestre } from '../../LocalStorage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getLocalStorage } from '../../LocalStorage';\r\nimport { } from '../../redux/actions/materiaSeleccionado.action';\r\nimport { addCuatrimestre, replaceCuatrimestres } from '../../redux/actions/cuatrimestre.action';\r\nimport { replaceMateriaSeleccionado } from '../../redux/actions/materiaSeleccionado.action';\r\nimport { State } from '../../redux/types';\r\nimport apiMateria from '../../ApiMaterias';\r\n\r\nconst MainComponent = () => {\r\n   const dispatch = useDispatch();\r\n   const cuatrimestres = useSelector((state: State) => state.cuatrimestres);\r\n   const [promedioHistorico, setPromedioHistorico] = useState(0);\r\n\r\n   useEffect(() => setPromedioHistorico(getPromedioHistorico()));\r\n\r\n   useEffect(() => {\r\n      // aqui cargamos la data del local storage\r\n      const cuatrimestresData = getLocalStorage().cuatrimestres;\r\n      const materiaRenderizado = getLocalStorage().materiaRenderizado;\r\n\r\n      cuatrimestresData && dispatch(replaceCuatrimestres(cuatrimestresData));\r\n      materiaRenderizado && dispatch(replaceMateriaSeleccionado(materiaRenderizado));\r\n \r\n\r\n   }, []);\r\n\r\n   const getPromedioHistorico = () => {\r\n      let notaParcial = 0;\r\n      let cantidadCreditos = 0;\r\n      cuatrimestres.forEach(cuatrimestre => {\r\n         cuatrimestre.forEach(materia => {\r\n            let notaVuelta = 0;\r\n            if (materia.calificacion >= 90) notaVuelta += 4;\r\n            else if (materia.calificacion >= 80) notaVuelta += 3;\r\n            else if (materia.calificacion >= 70) notaVuelta += 2;\r\n            else notaVuelta += 1;\r\n            const res = materia.creditos * notaVuelta;\r\n            notaParcial += res;\r\n            cantidadCreditos += materia.creditos;\r\n         })\r\n      })\r\n      const resultado = notaParcial / cantidadCreditos;\r\n      return Number(resultado.toFixed(1));\r\n   };\r\n\r\n   const nuevoCuatrimestre = () => {\r\n      const newCuatrimestre: typeDataCuatrimestre = []\r\n      dispatch(addCuatrimestre(newCuatrimestre));\r\n   };\r\n\r\n   return (\r\n      <DivParentContainer>\r\n         <div className=\"container-fluid  vh-100 d-flex\">\r\n            <GlobalStyles />\r\n            <DivMainContainer>\r\n               <Titulo>Gesty App - Brandox</Titulo>\r\n               <DivCuatrimestres>\r\n                  {cuatrimestres.map((element, index) => (\r\n                     <Cuatrimestre key={index} indice={index} />\r\n                  ))}\r\n                  <ButtonNuevoCuatrimestre onClick={nuevoCuatrimestre} >\r\n                     + <br />Nuevo Cuatrimestre\r\n               </ButtonNuevoCuatrimestre>\r\n               </DivCuatrimestres>\r\n               <LabelPromedioHistorico> Tu Promedio Historico es de {promedioHistorico} </LabelPromedioHistorico>\r\n            </DivMainContainer>\r\n         </div>\r\n      </DivParentContainer>\r\n   )\r\n}\r\n\r\nexport default MainComponent;","C:\\github\\react-projects\\gesty-app\\src\\LocalStorage.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\redux\\actions\\cuatrimestre.action.ts",["78","79"],"import { typeApiMateria } from '../../ApiMaterias';\r\nimport { typeDataCuatrimestre, typeDataCuatrimestres, typeMateria } from '../../LocalStorage';\r\nimport { generateId } from '../../utils';\r\nimport { RealAction } from '../types';\r\n\r\n// CONSTANTS\r\nexport const ADD_CUATRIMESTRE = 'ADD_CUATRIMESTRE';\r\nexport const DELETE_CUATRIMESTRE = 'DELETE_CUATRIMESTRE';\r\nexport const REPLACE_CUATRIMESTRES = 'REPLACE_CUATRIMESTRES';\r\nexport const ADD_MATERIA = 'ADD_MATERIA';\r\nexport const DELETE_MATERIA = 'DELETE_MATERIA';\r\nexport const UPDATE_MATERIA = 'UPDATE_MATERIA';\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// const defaultActionCuatrimestre: RealAction = {\r\n//     type: '',\r\n//     payload: {\r\n//         cuatrimestre: [], cuatrimestres: [], indiceCuatrimestre: 0\r\n//     }\r\n// }\r\n\r\n// const defaultActionMateria: RealAction = {\r\n//     type: '',\r\n//     payload: {\r\n//         indiceCuatrimestre: 0, indiceMateria: 0,\r\n//         materia: { creditos: 0, nombre: '', calificacion: 0, id: generateId(), indice: 0 }\r\n//     }\r\n// }\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nexport const addCuatrimestre = (cuatrimestre: typeDataCuatrimestre): RealAction => ({\r\n    type: ADD_CUATRIMESTRE,\r\n    payload: {\r\n        cuatrimestre,\r\n        indiceCuatrimestre: 0,\r\n        cuatrimestres: []\r\n\r\n    }\r\n})\r\n\r\nexport const deleteCuatrimestre = (indiceCuatrimestre: number): RealAction => ({\r\n    type: DELETE_CUATRIMESTRE,\r\n    payload: {\r\n        cuatrimestre: [],\r\n        indiceCuatrimestre,\r\n        cuatrimestres: []\r\n    }\r\n})\r\n\r\nexport const replaceCuatrimestres = (cuatrimestres: typeDataCuatrimestres): RealAction => ({\r\n    type: REPLACE_CUATRIMESTRES,\r\n    payload: {\r\n        cuatrimestre: [],\r\n        indiceCuatrimestre: 0,\r\n        cuatrimestres\r\n    }\r\n})\r\n\r\nexport const addMateria = (indiceCuatrimestre: number, materia: typeMateria): RealAction => ({\r\n    type: ADD_MATERIA,\r\n    payload: {\r\n        indiceCuatrimestre,\r\n        materia,\r\n        indiceMateria: 0\r\n\r\n    }\r\n})\r\n\r\nexport const deleteMateria = (indiceCuatrimestre: number, indiceMateria: number, materia: typeMateria): RealAction => ({\r\n    type: DELETE_MATERIA,\r\n    payload: {\r\n        indiceCuatrimestre,\r\n        materia,\r\n        indiceMateria\r\n    }\r\n})\r\n\r\nexport const updateMateria = (indiceCuatrimestre: number, indiceMateria: number, materia: typeMateria): RealAction => {\r\n    return ({\r\n        type: UPDATE_MATERIA,\r\n        payload: {\r\n            indiceCuatrimestre,\r\n            materia,\r\n            indiceMateria\r\n        }\r\n    })\r\n}","C:\\github\\react-projects\\gesty-app\\src\\redux\\actions\\materiaSeleccionado.action.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\components\\MainComponent\\MainComponentStyled.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\components\\Cuatrimestre\\Cuatrimestre.tsx",["80"],"import React, { useEffect, useState } from 'react';\r\nimport { DivParentContainer, DivTable, Button, DivTituloContainer, TableMaterias, LabelPromedioCuatrimestral, BotonCerrarCuatrimestre } from './CuatrimestreStyled';\r\nimport Materia from './Materia';\r\nimport { IPropsCuatrimestre } from './types';\r\nimport { typeMateria } from '../../LocalStorage';\r\nimport { generateId } from '../../utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { State } from '../../redux/types';\r\nimport { addMateria, deleteCuatrimestre } from '../../redux/actions/cuatrimestre.action';\r\nimport { borrarMateriaSeleccionado, nuevaMateriaSeleccionado } from '../../redux/actions/materiaSeleccionado.action';\r\n\r\nconst Cuatrimestre = (props: IPropsCuatrimestre) => {\r\n\r\n   const dispatch = useDispatch();\r\n   const cuatrimestre = useSelector((state: State) => state.cuatrimestres[props.indice]);\r\n   const [promedioCuatrimestral, setPromedioCuatrimestral] = useState(0);\r\n\r\n   useEffect(() => {\r\n      calcularPromedio();\r\n   });\r\n\r\n   const _addMateria = () => {\r\n      const nuevaMateria: typeMateria = { calificacion: 0, creditos: 0, nombre: '', id: generateId(), indice: 0 };\r\n      dispatch(addMateria(props.indice, nuevaMateria));\r\n   };\r\n\r\n   const calcularPromedio = () => {\r\n      let notaParcial = 0;\r\n      let cantidadCreditos = 0;\r\n      cuatrimestre.forEach(elemento => {\r\n         const { calificacion, creditos } = elemento;\r\n         let notaVuelta = 0;\r\n         if (calificacion >= 90) notaVuelta += 4;\r\n         else if (calificacion >= 80) notaVuelta += 3;\r\n         else if (calificacion >= 70) notaVuelta += 2;\r\n         else notaVuelta += 1;\r\n         const res = creditos * notaVuelta;\r\n         notaParcial += res;\r\n         cantidadCreditos += creditos;\r\n      });\r\n\r\n      const resultado = notaParcial / cantidadCreditos;\r\n      setPromedioCuatrimestral(Number(resultado.toFixed(1)))\r\n   };\r\n\r\n   const handlerEliminarCuatrimestre = () => {\r\n      cuatrimestre.forEach(el => {\r\n         console.log(el.nombre);\r\n         if (el.nombre !== '') {\r\n            dispatch(borrarMateriaSeleccionado({ creditos: el.creditos, materia: el.nombre }));\r\n         }\r\n      });\r\n      dispatch(deleteCuatrimestre(props.indice));\r\n\r\n\r\n   };\r\n\r\n   return (\r\n      <DivParentContainer>\r\n         <DivTituloContainer>\r\n            <label>Cuatrimestre {props.indice + 1}</label>\r\n            <div>\r\n               <Button onClick={_addMateria} className='badge  text-wrap '\r\n               >Nueva Materia</Button>\r\n               <BotonCerrarCuatrimestre onClick={handlerEliminarCuatrimestre}>X</BotonCerrarCuatrimestre>\r\n            </div>\r\n         </DivTituloContainer>\r\n         <DivTable>\r\n            <TableMaterias>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Materia</th>\r\n                     <th>Creditos</th>\r\n                     <th>Calificacion</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {cuatrimestre.map((element, index) => (<Materia indice={index} key={index} indiceCuatrimestre={props.indice} dataMateria={cuatrimestre[index]} />))}\r\n               </tbody>\r\n            </TableMaterias>\r\n         </DivTable>\r\n         <LabelPromedioCuatrimestral>Tu Promedio En este cuatrimestre fue es de {promedioCuatrimestral}</LabelPromedioCuatrimestral>\r\n\r\n      </DivParentContainer>\r\n   )\r\n}\r\n\r\nexport default Cuatrimestre;","C:\\github\\react-projects\\gesty-app\\src\\components\\Cuatrimestre\\CuatrimestreStyled.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\utils.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\components\\Cuatrimestre\\Materia.tsx",["81"],"import React, { useState, useEffect } from 'react'\r\nimport { SelectMateria, InputCalificacion, TrMateriaPadre, BotonCerrarMateria } from './CuatrimestreStyled'\r\nimport ApiMaterias, { typeApiMateria } from '../../ApiMaterias';\r\nimport { IPropsMateria } from './types';\r\nimport { typeMateria } from '../../LocalStorage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteMateria, updateMateria } from '../../redux/actions/cuatrimestre.action';\r\nimport { State } from '../../redux/types';\r\nimport { nuevaMateriaSeleccionado, updateMateriaSeleccionado } from '../../redux/actions/materiaSeleccionado.action';\r\n\r\n\r\nconst Materia = (props: IPropsMateria) => {\r\n   const { dataMateria, indice, indiceCuatrimestre } = props\r\n   const materiaRenderizado = useSelector((state: State) => state.materiaRenderizado);\r\n   const dispatch = useDispatch();\r\n   const [selectMateria, setSelectMateria] = useState('');\r\n   const [creditos, setCreditos] = useState(0);\r\n   const [calificacion, setCalificacion] = useState(0);\r\n\r\n   useEffect(() => {\r\n      setSelectMateria(dataMateria.nombre);\r\n      setCreditos(dataMateria.creditos);\r\n      setCalificacion(dataMateria.calificacion);\r\n   }, [dataMateria]);\r\n\r\n\r\n   const handlerSelect = (value: string) => {\r\n      // actualizamos el select con el valor qu nos llega del event\r\n      dispatch(updateMateriaSeleccionado({ creditos: 0, materia: selectMateria }, { creditos: 0, materia: value }));\r\n      setSelectMateria(value);\r\n      // actualizamos el credito con el credito que es\r\n      ApiMaterias.forEach(element => element.materia === value && setCreditos(element.creditos));\r\n      // add the subject in the state corresponding\r\n      // getting the credits\r\n      const f = ApiMaterias.filter(el => el.materia === value);\r\n      const dataReal: typeMateria = { creditos: f[0].creditos, calificacion, nombre: value, id: dataMateria.id, indice };\r\n      dispatch(updateMateria(indiceCuatrimestre, indice, dataReal));\r\n\r\n   };\r\n\r\n   const handlerInputCalificacion = (value: string) => {\r\n      setCalificacion(Number(value));\r\n      console.log({\r\n         nombre: dataMateria.nombre\r\n\r\n      })\r\n      const f = ApiMaterias.filter(el => el.materia === dataMateria.nombre);\r\n      const dataReal: typeMateria = { creditos: f[0].creditos, calificacion: Number(value), nombre: dataMateria.nombre, id: dataMateria.id, indice };\r\n      dispatch(updateMateria(indiceCuatrimestre, indice, dataReal));\r\n   };\r\n\r\n   const handlerBorrarMateria = () => {\r\n      console.log('F' + selectMateria + 'F');\r\n      if (selectMateria !== 'Selecciona Tu Materia' && selectMateria !== '') {\r\n         const materia: typeMateria = { creditos, calificacion, nombre: selectMateria, id: dataMateria.id, indice };\r\n         dispatch(deleteMateria(indiceCuatrimestre, indice, materia));\r\n      }\r\n   }\r\n\r\n   return (\r\n      <TrMateriaPadre>\r\n         <td>\r\n            <SelectMateria onChange={event => handlerSelect(event.currentTarget.value)} value={selectMateria}\r\n            >\r\n               {selectMateria !== '' && <option> {selectMateria} </option>}\r\n\r\n               {materiaRenderizado.map((element: typeApiMateria, index: number) => {\r\n                  return <option key={index} > {element.materia} </option>\r\n               })}\r\n\r\n            </SelectMateria>\r\n         </td>\r\n         <td>{creditos}</td>\r\n         <td style={{ position: 'relative' }}>\r\n            <InputCalificacion placeholder='Nota' value={calificacion}\r\n               onChange={(e) => handlerInputCalificacion(e.currentTarget.value)}\r\n            />\r\n            <BotonCerrarMateria onClick={handlerBorrarMateria} >X</BotonCerrarMateria>\r\n         </td>\r\n      </TrMateriaPadre>\r\n\r\n   )\r\n}\r\n\r\nexport default Materia;",["82","83"],"C:\\github\\react-projects\\gesty-app\\src\\ApiMaterias.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\redux\\store.ts",[],"C:\\github\\react-projects\\gesty-app\\src\\redux\\middleware.ts",["84"],"import { CuatrimestreDispatch, MateriaAction, materiaRenderizadoAction, RealAction, State } from '../redux/types';\r\nimport { Store } from 'redux';\r\nimport { replaceLocalStorage } from '../LocalStorage';\r\nimport { DELETE_MATERIA, } from './actions/cuatrimestre.action';\r\nimport { borrarMateriaSeleccionado } from './actions/materiaSeleccionado.action';\r\n\r\ntype Middlerware = (store: any) => (next: CuatrimestreDispatch) => (action: RealAction) => void\r\n\r\nconst middleware: Middlerware = (store: Store) => next => action => {\r\n    if (action.type === DELETE_MATERIA) {\r\n        // const { creditos, nombre } = (action.payload as MateriaAction).materia;\r\n\r\n        const { payload: { materia: { creditos, nombre } } } = action as MateriaAction;\r\n        store.dispatch(borrarMateriaSeleccionado({ creditos, materia: nombre }));\r\n    }\r\n    // next it\r\n    next(action);\r\n\r\n    setTimeout(() => {\r\n        const state: State = store.getState();\r\n        replaceLocalStorage(state);\r\n    }, 500);\r\n\r\n}\r\n\r\nexport default middleware",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":11,"column":8,"nodeType":"91","messageId":"92","endLine":11,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":18,"column":4,"nodeType":"91","endLine":18,"endColumn":13,"suggestions":"95"},{"ruleId":"93","severity":1,"message":"96","line":29,"column":7,"nodeType":"97","endLine":29,"endColumn":9,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":24},{"ruleId":"89","severity":1,"message":"100","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":20},{"ruleId":"89","severity":1,"message":"101","line":10,"column":37,"nodeType":"91","messageId":"92","endLine":10,"endColumn":61},{"ruleId":"89","severity":1,"message":"101","line":9,"column":10,"nodeType":"91","messageId":"92","endLine":9,"endColumn":34},{"ruleId":"85","replacedBy":"102"},{"ruleId":"87","replacedBy":"103"},{"ruleId":"89","severity":1,"message":"104","line":1,"column":47,"nodeType":"91","messageId":"92","endLine":1,"endColumn":71},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'apiMateria' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPromedioHistorico'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getPromedioHistorico] as a second argument to the useEffect Hook.",["107"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'typeApiMateria' is defined but never used.","'generateId' is defined but never used.","'nuevaMateriaSeleccionado' is defined but never used.",["105"],["106"],"'materiaRenderizadoAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Add dependencies array: [getPromedioHistorico]",{"range":"113","text":"114"},"Update the dependencies array to be: [dispatch]",{"range":"115","text":"116"},[1078,1078],", [getPromedioHistorico]",[1473,1475],"[dispatch]"]